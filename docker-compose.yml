version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: garment-mysql
    environment:
      MYSQL_ROOT_PASSWORD: garment_root_2024
      MYSQL_DATABASE: garment_production
      MYSQL_USER: garment_user
      MYSQL_PASSWORD: garment_pass_2024
      TZ: Asia/Shanghai
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/conf:/etc/mysql/conf.d
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    networks:
      - garment-network

  # Redis缓存服务  
  redis:
    image: redis:6.2-alpine
    container_name: garment-redis
    command: redis-server --appendonly yes --requirepass garment_redis_2024
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6399:6379"
    restart: unless-stopped
    networks:
      - garment-network

  # 后端API服务
  backend:
    build: 
      context: ./garment-backend
      dockerfile: Dockerfile
    container_name: garment-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: garment_production
      MYSQL_USERNAME: garment_user
      MYSQL_PASSWORD: garment_pass_2024
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: garment_redis_2024
      TZ: Asia/Shanghai
    volumes:
      - backend_logs:/app/logs
      - backend_storage:/app/storage
      - backend_temp:/app/temp
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    networks:
      - garment-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 管理后台前端服务
  frontend:
    build:
      context: ./garment-frontend
      dockerfile: Dockerfile
    container_name: garment-frontend
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - frontend_logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - garment-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local
  backend_storage:
    driver: local
  backend_temp:
    driver: local
  frontend_logs:
    driver: local

networks:
  garment-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16